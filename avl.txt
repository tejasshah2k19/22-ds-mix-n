AVL tree 
	self balancing binary search tree 
	0) node -> left child - right child [ -1 , 0 , 1 ] 
		bf|node| = LH- RH [ -1 0 1 ] 
	1) LL -> new node -> left subtree -> left subtree [single R] 
	2) RR -> new node -> right subtree -> right subtree [single L ] 
	3) LR -> new node -> right subtree -> left subtree  [double R L ]
	4) RL -> new node -> left subtree  -> right subtree [ dobule L R ] 


1 2 3 4 5 6 7 


25 41 52 63 85 45 20 69

1 2 3 4 5 6 7 8 9 10 11 12 13 14  

1 2 3 

 2
1 3  
---------------
 2
1 3
   4 
    5
--------------
  2
1   4
   3 5
       6

--------------
      4
  2     5
1  3      6
            7

--------------
      4
  2     6
1  3  5   7
            8
              9

--------------
      4
  2     6
1  3  5   8
        7   9
              10


--------------
      4
  2       8
1  3   6     9
     5   7     10 
                  11


--------------
      4
  2       8
1  3   6       10
     5   7   9   11 
                   12
               



--------------
         8
      4     10
  2     6  9  11   
1  3  5  7       12 
                    13


--------------
         8
      4       10
  2     6   9    12   
1  3  5  7    11   13 
                       14 


--------------
	         8
       	   4           12
  	2     6     10    13  
      1  3  5  7   9  11     14    
                        























